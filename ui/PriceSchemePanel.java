/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PriceSchemePanel.java
 *
 * Created on 13-Apr-2011, 3:41:03 PM
 */

package ui;
import java.util.Vector;
import java.sql.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import pos.PriceScheme;
import search.Search;

/**
 *
 * @author cwang01
 */
public class PriceSchemePanel extends javax.swing.JPanel {

    Vector <Vector<String>> data;
    Vector <String> header;
    //Search search = new search


        /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private Vector ReturnVector(ArrayList list){
        return new Vector(list);
    }

    /** Creates new form PriceSchemePanel */
    public PriceSchemePanel() {
        ArrayList headerString;
        ArrayList formatString;
        //populates the data Arraylist with the prices
        data = new Vector <Vector<String>>();
        try {
            int[][] prices;
            PriceScheme init = new PriceScheme();
            prices = init.getAllPrices();
            headerString = new ArrayList<String>();
            headerString = init.getAllCategories();
            formatString = new ArrayList<String>();
            formatString = init.getAllFormats();
            header = ReturnVector(headerString);
            header.add("");

            Vector <String> row;
            for (int i = 0; i < prices.length-1; i++)
            {
                row = new Vector <String>();
                row.add(formatString.get(i).toString());
                for (int j = 0; j < prices[i].length; j++)
                {
                    
                    row.add("" + prices[j][i]);
                }
                data.add(row);
            }
        }
        catch (SQLException ex) {
            Logger.getLogger(PriceSchemePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch (ClassNotFoundException ex) {
            Logger.getLogger(PriceSchemePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addFormatPriceSchemeButton = new javax.swing.JButton();
        addCategoryPriceSchemeButton = new javax.swing.JButton();
        savePriceSchemeButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        priceSchemaTable = new javax.swing.JTable();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        addFormatPriceSchemeButton.setText("Add Format");
        addFormatPriceSchemeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFormatPriceSchemeButtonActionPerformed(evt);
            }
        });
        add(addFormatPriceSchemeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 390, -1, -1));

        addCategoryPriceSchemeButton.setText("Add Category");
        add(addCategoryPriceSchemeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 390, -1, -1));

        savePriceSchemeButton.setText("Save Changes");
        savePriceSchemeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePriceSchemeButtonActionPerformed(evt);
            }
        });
        add(savePriceSchemeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 390, -1, -1));

        priceSchemaTable.setModel(new javax.swing.table.DefaultTableModel(
            data,header
        ));
        priceSchemaTable.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                priceSchemaTableAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane2.setViewportView(priceSchemaTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 608, 356));
    }// </editor-fold>//GEN-END:initComponents

    private void addFormatPriceSchemeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFormatPriceSchemeButtonActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_addFormatPriceSchemeButtonActionPerformed

    private void savePriceSchemeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savePriceSchemeButtonActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_savePriceSchemeButtonActionPerformed

    private void priceSchemaTableAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_priceSchemaTableAncestorAdded
        // TODO add your handling code here:
}//GEN-LAST:event_priceSchemaTableAncestorAdded


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCategoryPriceSchemeButton;
    private javax.swing.JButton addFormatPriceSchemeButton;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable priceSchemaTable;
    private javax.swing.JButton savePriceSchemeButton;
    // End of variables declaration//GEN-END:variables

}
